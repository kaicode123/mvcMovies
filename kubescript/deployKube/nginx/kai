apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2020-10-13T10:53:36Z"
  generateName: ingress-nginx-ingress-controller-855c77d4bb-
  labels:
    app: nginx-ingress
    app.kubernetes.io/component: controller
    component: controller
    pod-template-hash: 855c77d4bb
    release: ingress
  name: ingress-nginx-ingress-controller-855c77d4bb-js7xd
  namespace: default
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: ingress-nginx-ingress-controller-855c77d4bb
    uid: 083694be-a382-4032-b992-fa57db998d1d
  resourceVersion: "3623918"
  selfLink: /api/v1/namespaces/default/pods/ingress-nginx-ingress-controller-855c77d4bb-js7xd
  uid: c72288b7-573a-48ce-a05c-d5e12d2de423
spec:
  containers:
  - args:
    - /nginx-ingress-controller
    - --default-backend-service=default/ingress-nginx-ingress-default-backend
    - --election-id=ingress-controller-leader
    - --ingress-class=nginx
    - --configmap=default/ingress-nginx-ingress-controller
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: us.gcr.io/k8s-artifacts-prod/ingress-nginx/controller:v0.34.1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: nginx-ingress-controller
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      name: https
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      allowPrivilegeEscalation: true
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - ALL
      runAsUser: 101
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: ingress-nginx-ingress-token-9z94h
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: aks-agentpool-39838025-vmss000004
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: ingress-nginx-ingress
  serviceAccountName: ingress-nginx-ingress
  terminationGracePeriodSeconds: 60
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: ingress-nginx-ingress-token-9z94h
    secret:
      defaultMode: 420
      secretName: ingress-nginx-ingress-token-9z94h
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2020-10-13T10:53:36Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2020-10-13T10:53:55Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2020-10-13T10:53:55Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2020-10-13T10:53:36Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://19ceea8ad44013d590aad0aaf7967ddf2c44364b735a9a84ede2970d657bf437
    image: us.gcr.io/k8s-artifacts-prod/ingress-nginx/controller:v0.34.1
    imageID: docker-pullable://us.gcr.io/k8s-artifacts-prod/ingress-nginx/controller@sha256:0e072dddd1f7f8fc8909a2ca6f65e76c5f0d2fcfb8be47935ae3457e8bbceb20
    lastState: {}
    name: nginx-ingress-controller
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2020-10-13T10:53:38Z"
  hostIP: 10.240.0.5
  phase: Running
  podIP: 10.244.3.31
  podIPs:
  - ip: 10.244.3.31
  qosClass: BestEffort
  startTime: "2020-10-13T10:53:36Z"
